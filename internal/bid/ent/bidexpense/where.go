// Code generated by ent, DO NOT EDIT.

package bidexpense

import (
	"cds/bid/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldID, id))
}

// BusinessID applies equality check predicate on the "business_id" field. It's identical to BusinessIDEQ.
func BusinessID(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldBusinessID, v))
}

// InstanceID applies equality check predicate on the "instance_id" field. It's identical to InstanceIDEQ.
func InstanceID(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldInstanceID, v))
}

// BillNo applies equality check predicate on the "bill_no" field. It's identical to BillNoEQ.
func BillNo(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldBillNo, v))
}

// ProjectID applies equality check predicate on the "project_id" field. It's identical to ProjectIDEQ.
func ProjectID(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldProjectID, v))
}

// ProjectName applies equality check predicate on the "project_name" field. It's identical to ProjectNameEQ.
func ProjectName(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldProjectName, v))
}

// ProjectCode applies equality check predicate on the "project_code" field. It's identical to ProjectCodeEQ.
func ProjectCode(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldProjectCode, v))
}

// BizRepName applies equality check predicate on the "biz_rep_name" field. It's identical to BizRepNameEQ.
func BizRepName(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldBizRepName, v))
}

// Purchaser applies equality check predicate on the "purchaser" field. It's identical to PurchaserEQ.
func Purchaser(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPurchaser, v))
}

// FeeTypeV1 applies equality check predicate on the "fee_type_v1" field. It's identical to FeeTypeV1EQ.
func FeeTypeV1(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldFeeTypeV1, v))
}

// PayReason applies equality check predicate on the "pay_reason" field. It's identical to PayReasonEQ.
func PayReason(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayReason, v))
}

// Refunded applies equality check predicate on the "refunded" field. It's identical to RefundedEQ.
func Refunded(v bool) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldRefunded, v))
}

// PayeeBank applies equality check predicate on the "payee_bank" field. It's identical to PayeeBankEQ.
func PayeeBank(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayeeBank, v))
}

// PayeeName applies equality check predicate on the "payee_name" field. It's identical to PayeeNameEQ.
func PayeeName(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayeeName, v))
}

// PayeeAccount applies equality check predicate on the "payee_account" field. It's identical to PayeeAccountEQ.
func PayeeAccount(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayeeAccount, v))
}

// PayRatio applies equality check predicate on the "pay_ratio" field. It's identical to PayRatioEQ.
func PayRatio(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayRatio, v))
}

// PayAmount applies equality check predicate on the "pay_amount" field. It's identical to PayAmountEQ.
func PayAmount(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayAmount, v))
}

// PayRemark applies equality check predicate on the "pay_remark" field. It's identical to PayRemarkEQ.
func PayRemark(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayRemark, v))
}

// PayMethod applies equality check predicate on the "pay_method" field. It's identical to PayMethodEQ.
func PayMethod(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayMethod, v))
}

// PlanPayTime applies equality check predicate on the "plan_pay_time" field. It's identical to PlanPayTimeEQ.
func PlanPayTime(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPlanPayTime, v))
}

// ApprovalStatus applies equality check predicate on the "approval_status" field. It's identical to ApprovalStatusEQ.
func ApprovalStatus(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldApprovalStatus, v))
}

// Done applies equality check predicate on the "done" field. It's identical to DoneEQ.
func Done(v bool) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldDone, v))
}

// CreateAt applies equality check predicate on the "create_at" field. It's identical to CreateAtEQ.
func CreateAt(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldCreateAt, v))
}

// CreateBy applies equality check predicate on the "create_by" field. It's identical to CreateByEQ.
func CreateBy(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldCreateBy, v))
}

// UpdateAt applies equality check predicate on the "update_at" field. It's identical to UpdateAtEQ.
func UpdateAt(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldUpdateAt, v))
}

// UpdateBy applies equality check predicate on the "update_by" field. It's identical to UpdateByEQ.
func UpdateBy(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldUpdateBy, v))
}

// BusinessIDEQ applies the EQ predicate on the "business_id" field.
func BusinessIDEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldBusinessID, v))
}

// BusinessIDNEQ applies the NEQ predicate on the "business_id" field.
func BusinessIDNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldBusinessID, v))
}

// BusinessIDIn applies the In predicate on the "business_id" field.
func BusinessIDIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldBusinessID, vs...))
}

// BusinessIDNotIn applies the NotIn predicate on the "business_id" field.
func BusinessIDNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldBusinessID, vs...))
}

// BusinessIDGT applies the GT predicate on the "business_id" field.
func BusinessIDGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldBusinessID, v))
}

// BusinessIDGTE applies the GTE predicate on the "business_id" field.
func BusinessIDGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldBusinessID, v))
}

// BusinessIDLT applies the LT predicate on the "business_id" field.
func BusinessIDLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldBusinessID, v))
}

// BusinessIDLTE applies the LTE predicate on the "business_id" field.
func BusinessIDLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldBusinessID, v))
}

// BusinessIDContains applies the Contains predicate on the "business_id" field.
func BusinessIDContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldBusinessID, v))
}

// BusinessIDHasPrefix applies the HasPrefix predicate on the "business_id" field.
func BusinessIDHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldBusinessID, v))
}

// BusinessIDHasSuffix applies the HasSuffix predicate on the "business_id" field.
func BusinessIDHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldBusinessID, v))
}

// BusinessIDEqualFold applies the EqualFold predicate on the "business_id" field.
func BusinessIDEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldBusinessID, v))
}

// BusinessIDContainsFold applies the ContainsFold predicate on the "business_id" field.
func BusinessIDContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldBusinessID, v))
}

// InstanceIDEQ applies the EQ predicate on the "instance_id" field.
func InstanceIDEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldInstanceID, v))
}

// InstanceIDNEQ applies the NEQ predicate on the "instance_id" field.
func InstanceIDNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldInstanceID, v))
}

// InstanceIDIn applies the In predicate on the "instance_id" field.
func InstanceIDIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldInstanceID, vs...))
}

// InstanceIDNotIn applies the NotIn predicate on the "instance_id" field.
func InstanceIDNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldInstanceID, vs...))
}

// InstanceIDGT applies the GT predicate on the "instance_id" field.
func InstanceIDGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldInstanceID, v))
}

// InstanceIDGTE applies the GTE predicate on the "instance_id" field.
func InstanceIDGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldInstanceID, v))
}

// InstanceIDLT applies the LT predicate on the "instance_id" field.
func InstanceIDLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldInstanceID, v))
}

// InstanceIDLTE applies the LTE predicate on the "instance_id" field.
func InstanceIDLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldInstanceID, v))
}

// InstanceIDContains applies the Contains predicate on the "instance_id" field.
func InstanceIDContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldInstanceID, v))
}

// InstanceIDHasPrefix applies the HasPrefix predicate on the "instance_id" field.
func InstanceIDHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldInstanceID, v))
}

// InstanceIDHasSuffix applies the HasSuffix predicate on the "instance_id" field.
func InstanceIDHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldInstanceID, v))
}

// InstanceIDEqualFold applies the EqualFold predicate on the "instance_id" field.
func InstanceIDEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldInstanceID, v))
}

// InstanceIDContainsFold applies the ContainsFold predicate on the "instance_id" field.
func InstanceIDContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldInstanceID, v))
}

// BillNoEQ applies the EQ predicate on the "bill_no" field.
func BillNoEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldBillNo, v))
}

// BillNoNEQ applies the NEQ predicate on the "bill_no" field.
func BillNoNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldBillNo, v))
}

// BillNoIn applies the In predicate on the "bill_no" field.
func BillNoIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldBillNo, vs...))
}

// BillNoNotIn applies the NotIn predicate on the "bill_no" field.
func BillNoNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldBillNo, vs...))
}

// BillNoGT applies the GT predicate on the "bill_no" field.
func BillNoGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldBillNo, v))
}

// BillNoGTE applies the GTE predicate on the "bill_no" field.
func BillNoGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldBillNo, v))
}

// BillNoLT applies the LT predicate on the "bill_no" field.
func BillNoLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldBillNo, v))
}

// BillNoLTE applies the LTE predicate on the "bill_no" field.
func BillNoLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldBillNo, v))
}

// BillNoContains applies the Contains predicate on the "bill_no" field.
func BillNoContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldBillNo, v))
}

// BillNoHasPrefix applies the HasPrefix predicate on the "bill_no" field.
func BillNoHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldBillNo, v))
}

// BillNoHasSuffix applies the HasSuffix predicate on the "bill_no" field.
func BillNoHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldBillNo, v))
}

// BillNoEqualFold applies the EqualFold predicate on the "bill_no" field.
func BillNoEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldBillNo, v))
}

// BillNoContainsFold applies the ContainsFold predicate on the "bill_no" field.
func BillNoContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldBillNo, v))
}

// ProjectIDEQ applies the EQ predicate on the "project_id" field.
func ProjectIDEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldProjectID, v))
}

// ProjectIDNEQ applies the NEQ predicate on the "project_id" field.
func ProjectIDNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldProjectID, v))
}

// ProjectIDIn applies the In predicate on the "project_id" field.
func ProjectIDIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldProjectID, vs...))
}

// ProjectIDNotIn applies the NotIn predicate on the "project_id" field.
func ProjectIDNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldProjectID, vs...))
}

// ProjectIDGT applies the GT predicate on the "project_id" field.
func ProjectIDGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldProjectID, v))
}

// ProjectIDGTE applies the GTE predicate on the "project_id" field.
func ProjectIDGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldProjectID, v))
}

// ProjectIDLT applies the LT predicate on the "project_id" field.
func ProjectIDLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldProjectID, v))
}

// ProjectIDLTE applies the LTE predicate on the "project_id" field.
func ProjectIDLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldProjectID, v))
}

// ProjectIDContains applies the Contains predicate on the "project_id" field.
func ProjectIDContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldProjectID, v))
}

// ProjectIDHasPrefix applies the HasPrefix predicate on the "project_id" field.
func ProjectIDHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldProjectID, v))
}

// ProjectIDHasSuffix applies the HasSuffix predicate on the "project_id" field.
func ProjectIDHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldProjectID, v))
}

// ProjectIDIsNil applies the IsNil predicate on the "project_id" field.
func ProjectIDIsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldProjectID))
}

// ProjectIDNotNil applies the NotNil predicate on the "project_id" field.
func ProjectIDNotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldProjectID))
}

// ProjectIDEqualFold applies the EqualFold predicate on the "project_id" field.
func ProjectIDEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldProjectID, v))
}

// ProjectIDContainsFold applies the ContainsFold predicate on the "project_id" field.
func ProjectIDContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldProjectID, v))
}

// ProjectNameEQ applies the EQ predicate on the "project_name" field.
func ProjectNameEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldProjectName, v))
}

// ProjectNameNEQ applies the NEQ predicate on the "project_name" field.
func ProjectNameNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldProjectName, v))
}

// ProjectNameIn applies the In predicate on the "project_name" field.
func ProjectNameIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldProjectName, vs...))
}

// ProjectNameNotIn applies the NotIn predicate on the "project_name" field.
func ProjectNameNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldProjectName, vs...))
}

// ProjectNameGT applies the GT predicate on the "project_name" field.
func ProjectNameGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldProjectName, v))
}

// ProjectNameGTE applies the GTE predicate on the "project_name" field.
func ProjectNameGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldProjectName, v))
}

// ProjectNameLT applies the LT predicate on the "project_name" field.
func ProjectNameLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldProjectName, v))
}

// ProjectNameLTE applies the LTE predicate on the "project_name" field.
func ProjectNameLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldProjectName, v))
}

// ProjectNameContains applies the Contains predicate on the "project_name" field.
func ProjectNameContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldProjectName, v))
}

// ProjectNameHasPrefix applies the HasPrefix predicate on the "project_name" field.
func ProjectNameHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldProjectName, v))
}

// ProjectNameHasSuffix applies the HasSuffix predicate on the "project_name" field.
func ProjectNameHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldProjectName, v))
}

// ProjectNameEqualFold applies the EqualFold predicate on the "project_name" field.
func ProjectNameEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldProjectName, v))
}

// ProjectNameContainsFold applies the ContainsFold predicate on the "project_name" field.
func ProjectNameContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldProjectName, v))
}

// ProjectCodeEQ applies the EQ predicate on the "project_code" field.
func ProjectCodeEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldProjectCode, v))
}

// ProjectCodeNEQ applies the NEQ predicate on the "project_code" field.
func ProjectCodeNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldProjectCode, v))
}

// ProjectCodeIn applies the In predicate on the "project_code" field.
func ProjectCodeIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldProjectCode, vs...))
}

// ProjectCodeNotIn applies the NotIn predicate on the "project_code" field.
func ProjectCodeNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldProjectCode, vs...))
}

// ProjectCodeGT applies the GT predicate on the "project_code" field.
func ProjectCodeGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldProjectCode, v))
}

// ProjectCodeGTE applies the GTE predicate on the "project_code" field.
func ProjectCodeGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldProjectCode, v))
}

// ProjectCodeLT applies the LT predicate on the "project_code" field.
func ProjectCodeLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldProjectCode, v))
}

// ProjectCodeLTE applies the LTE predicate on the "project_code" field.
func ProjectCodeLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldProjectCode, v))
}

// ProjectCodeContains applies the Contains predicate on the "project_code" field.
func ProjectCodeContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldProjectCode, v))
}

// ProjectCodeHasPrefix applies the HasPrefix predicate on the "project_code" field.
func ProjectCodeHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldProjectCode, v))
}

// ProjectCodeHasSuffix applies the HasSuffix predicate on the "project_code" field.
func ProjectCodeHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldProjectCode, v))
}

// ProjectCodeEqualFold applies the EqualFold predicate on the "project_code" field.
func ProjectCodeEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldProjectCode, v))
}

// ProjectCodeContainsFold applies the ContainsFold predicate on the "project_code" field.
func ProjectCodeContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldProjectCode, v))
}

// BizRepNameEQ applies the EQ predicate on the "biz_rep_name" field.
func BizRepNameEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldBizRepName, v))
}

// BizRepNameNEQ applies the NEQ predicate on the "biz_rep_name" field.
func BizRepNameNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldBizRepName, v))
}

// BizRepNameIn applies the In predicate on the "biz_rep_name" field.
func BizRepNameIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldBizRepName, vs...))
}

// BizRepNameNotIn applies the NotIn predicate on the "biz_rep_name" field.
func BizRepNameNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldBizRepName, vs...))
}

// BizRepNameGT applies the GT predicate on the "biz_rep_name" field.
func BizRepNameGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldBizRepName, v))
}

// BizRepNameGTE applies the GTE predicate on the "biz_rep_name" field.
func BizRepNameGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldBizRepName, v))
}

// BizRepNameLT applies the LT predicate on the "biz_rep_name" field.
func BizRepNameLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldBizRepName, v))
}

// BizRepNameLTE applies the LTE predicate on the "biz_rep_name" field.
func BizRepNameLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldBizRepName, v))
}

// BizRepNameContains applies the Contains predicate on the "biz_rep_name" field.
func BizRepNameContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldBizRepName, v))
}

// BizRepNameHasPrefix applies the HasPrefix predicate on the "biz_rep_name" field.
func BizRepNameHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldBizRepName, v))
}

// BizRepNameHasSuffix applies the HasSuffix predicate on the "biz_rep_name" field.
func BizRepNameHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldBizRepName, v))
}

// BizRepNameEqualFold applies the EqualFold predicate on the "biz_rep_name" field.
func BizRepNameEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldBizRepName, v))
}

// BizRepNameContainsFold applies the ContainsFold predicate on the "biz_rep_name" field.
func BizRepNameContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldBizRepName, v))
}

// PurchaserEQ applies the EQ predicate on the "purchaser" field.
func PurchaserEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPurchaser, v))
}

// PurchaserNEQ applies the NEQ predicate on the "purchaser" field.
func PurchaserNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPurchaser, v))
}

// PurchaserIn applies the In predicate on the "purchaser" field.
func PurchaserIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPurchaser, vs...))
}

// PurchaserNotIn applies the NotIn predicate on the "purchaser" field.
func PurchaserNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPurchaser, vs...))
}

// PurchaserGT applies the GT predicate on the "purchaser" field.
func PurchaserGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPurchaser, v))
}

// PurchaserGTE applies the GTE predicate on the "purchaser" field.
func PurchaserGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPurchaser, v))
}

// PurchaserLT applies the LT predicate on the "purchaser" field.
func PurchaserLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPurchaser, v))
}

// PurchaserLTE applies the LTE predicate on the "purchaser" field.
func PurchaserLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPurchaser, v))
}

// PurchaserContains applies the Contains predicate on the "purchaser" field.
func PurchaserContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldPurchaser, v))
}

// PurchaserHasPrefix applies the HasPrefix predicate on the "purchaser" field.
func PurchaserHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldPurchaser, v))
}

// PurchaserHasSuffix applies the HasSuffix predicate on the "purchaser" field.
func PurchaserHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldPurchaser, v))
}

// PurchaserIsNil applies the IsNil predicate on the "purchaser" field.
func PurchaserIsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldPurchaser))
}

// PurchaserNotNil applies the NotNil predicate on the "purchaser" field.
func PurchaserNotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldPurchaser))
}

// PurchaserEqualFold applies the EqualFold predicate on the "purchaser" field.
func PurchaserEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldPurchaser, v))
}

// PurchaserContainsFold applies the ContainsFold predicate on the "purchaser" field.
func PurchaserContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldPurchaser, v))
}

// FeeTypeV1EQ applies the EQ predicate on the "fee_type_v1" field.
func FeeTypeV1EQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldFeeTypeV1, v))
}

// FeeTypeV1NEQ applies the NEQ predicate on the "fee_type_v1" field.
func FeeTypeV1NEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldFeeTypeV1, v))
}

// FeeTypeV1In applies the In predicate on the "fee_type_v1" field.
func FeeTypeV1In(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldFeeTypeV1, vs...))
}

// FeeTypeV1NotIn applies the NotIn predicate on the "fee_type_v1" field.
func FeeTypeV1NotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldFeeTypeV1, vs...))
}

// FeeTypeV1GT applies the GT predicate on the "fee_type_v1" field.
func FeeTypeV1GT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldFeeTypeV1, v))
}

// FeeTypeV1GTE applies the GTE predicate on the "fee_type_v1" field.
func FeeTypeV1GTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldFeeTypeV1, v))
}

// FeeTypeV1LT applies the LT predicate on the "fee_type_v1" field.
func FeeTypeV1LT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldFeeTypeV1, v))
}

// FeeTypeV1LTE applies the LTE predicate on the "fee_type_v1" field.
func FeeTypeV1LTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldFeeTypeV1, v))
}

// FeeTypeV1Contains applies the Contains predicate on the "fee_type_v1" field.
func FeeTypeV1Contains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldFeeTypeV1, v))
}

// FeeTypeV1HasPrefix applies the HasPrefix predicate on the "fee_type_v1" field.
func FeeTypeV1HasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldFeeTypeV1, v))
}

// FeeTypeV1HasSuffix applies the HasSuffix predicate on the "fee_type_v1" field.
func FeeTypeV1HasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldFeeTypeV1, v))
}

// FeeTypeV1IsNil applies the IsNil predicate on the "fee_type_v1" field.
func FeeTypeV1IsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldFeeTypeV1))
}

// FeeTypeV1NotNil applies the NotNil predicate on the "fee_type_v1" field.
func FeeTypeV1NotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldFeeTypeV1))
}

// FeeTypeV1EqualFold applies the EqualFold predicate on the "fee_type_v1" field.
func FeeTypeV1EqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldFeeTypeV1, v))
}

// FeeTypeV1ContainsFold applies the ContainsFold predicate on the "fee_type_v1" field.
func FeeTypeV1ContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldFeeTypeV1, v))
}

// FeeTypeEQ applies the EQ predicate on the "fee_type" field.
func FeeTypeEQ(v FeeType) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldFeeType, v))
}

// FeeTypeNEQ applies the NEQ predicate on the "fee_type" field.
func FeeTypeNEQ(v FeeType) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldFeeType, v))
}

// FeeTypeIn applies the In predicate on the "fee_type" field.
func FeeTypeIn(vs ...FeeType) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldFeeType, vs...))
}

// FeeTypeNotIn applies the NotIn predicate on the "fee_type" field.
func FeeTypeNotIn(vs ...FeeType) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldFeeType, vs...))
}

// PayReasonEQ applies the EQ predicate on the "pay_reason" field.
func PayReasonEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayReason, v))
}

// PayReasonNEQ applies the NEQ predicate on the "pay_reason" field.
func PayReasonNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayReason, v))
}

// PayReasonIn applies the In predicate on the "pay_reason" field.
func PayReasonIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayReason, vs...))
}

// PayReasonNotIn applies the NotIn predicate on the "pay_reason" field.
func PayReasonNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayReason, vs...))
}

// PayReasonGT applies the GT predicate on the "pay_reason" field.
func PayReasonGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayReason, v))
}

// PayReasonGTE applies the GTE predicate on the "pay_reason" field.
func PayReasonGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayReason, v))
}

// PayReasonLT applies the LT predicate on the "pay_reason" field.
func PayReasonLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayReason, v))
}

// PayReasonLTE applies the LTE predicate on the "pay_reason" field.
func PayReasonLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayReason, v))
}

// PayReasonContains applies the Contains predicate on the "pay_reason" field.
func PayReasonContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldPayReason, v))
}

// PayReasonHasPrefix applies the HasPrefix predicate on the "pay_reason" field.
func PayReasonHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldPayReason, v))
}

// PayReasonHasSuffix applies the HasSuffix predicate on the "pay_reason" field.
func PayReasonHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldPayReason, v))
}

// PayReasonIsNil applies the IsNil predicate on the "pay_reason" field.
func PayReasonIsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldPayReason))
}

// PayReasonNotNil applies the NotNil predicate on the "pay_reason" field.
func PayReasonNotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldPayReason))
}

// PayReasonEqualFold applies the EqualFold predicate on the "pay_reason" field.
func PayReasonEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldPayReason, v))
}

// PayReasonContainsFold applies the ContainsFold predicate on the "pay_reason" field.
func PayReasonContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldPayReason, v))
}

// RefundedEQ applies the EQ predicate on the "refunded" field.
func RefundedEQ(v bool) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldRefunded, v))
}

// RefundedNEQ applies the NEQ predicate on the "refunded" field.
func RefundedNEQ(v bool) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldRefunded, v))
}

// PayeeBankEQ applies the EQ predicate on the "payee_bank" field.
func PayeeBankEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayeeBank, v))
}

// PayeeBankNEQ applies the NEQ predicate on the "payee_bank" field.
func PayeeBankNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayeeBank, v))
}

// PayeeBankIn applies the In predicate on the "payee_bank" field.
func PayeeBankIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayeeBank, vs...))
}

// PayeeBankNotIn applies the NotIn predicate on the "payee_bank" field.
func PayeeBankNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayeeBank, vs...))
}

// PayeeBankGT applies the GT predicate on the "payee_bank" field.
func PayeeBankGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayeeBank, v))
}

// PayeeBankGTE applies the GTE predicate on the "payee_bank" field.
func PayeeBankGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayeeBank, v))
}

// PayeeBankLT applies the LT predicate on the "payee_bank" field.
func PayeeBankLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayeeBank, v))
}

// PayeeBankLTE applies the LTE predicate on the "payee_bank" field.
func PayeeBankLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayeeBank, v))
}

// PayeeBankContains applies the Contains predicate on the "payee_bank" field.
func PayeeBankContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldPayeeBank, v))
}

// PayeeBankHasPrefix applies the HasPrefix predicate on the "payee_bank" field.
func PayeeBankHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldPayeeBank, v))
}

// PayeeBankHasSuffix applies the HasSuffix predicate on the "payee_bank" field.
func PayeeBankHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldPayeeBank, v))
}

// PayeeBankEqualFold applies the EqualFold predicate on the "payee_bank" field.
func PayeeBankEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldPayeeBank, v))
}

// PayeeBankContainsFold applies the ContainsFold predicate on the "payee_bank" field.
func PayeeBankContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldPayeeBank, v))
}

// PayeeNameEQ applies the EQ predicate on the "payee_name" field.
func PayeeNameEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayeeName, v))
}

// PayeeNameNEQ applies the NEQ predicate on the "payee_name" field.
func PayeeNameNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayeeName, v))
}

// PayeeNameIn applies the In predicate on the "payee_name" field.
func PayeeNameIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayeeName, vs...))
}

// PayeeNameNotIn applies the NotIn predicate on the "payee_name" field.
func PayeeNameNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayeeName, vs...))
}

// PayeeNameGT applies the GT predicate on the "payee_name" field.
func PayeeNameGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayeeName, v))
}

// PayeeNameGTE applies the GTE predicate on the "payee_name" field.
func PayeeNameGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayeeName, v))
}

// PayeeNameLT applies the LT predicate on the "payee_name" field.
func PayeeNameLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayeeName, v))
}

// PayeeNameLTE applies the LTE predicate on the "payee_name" field.
func PayeeNameLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayeeName, v))
}

// PayeeNameContains applies the Contains predicate on the "payee_name" field.
func PayeeNameContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldPayeeName, v))
}

// PayeeNameHasPrefix applies the HasPrefix predicate on the "payee_name" field.
func PayeeNameHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldPayeeName, v))
}

// PayeeNameHasSuffix applies the HasSuffix predicate on the "payee_name" field.
func PayeeNameHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldPayeeName, v))
}

// PayeeNameEqualFold applies the EqualFold predicate on the "payee_name" field.
func PayeeNameEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldPayeeName, v))
}

// PayeeNameContainsFold applies the ContainsFold predicate on the "payee_name" field.
func PayeeNameContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldPayeeName, v))
}

// PayeeAccountEQ applies the EQ predicate on the "payee_account" field.
func PayeeAccountEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayeeAccount, v))
}

// PayeeAccountNEQ applies the NEQ predicate on the "payee_account" field.
func PayeeAccountNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayeeAccount, v))
}

// PayeeAccountIn applies the In predicate on the "payee_account" field.
func PayeeAccountIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayeeAccount, vs...))
}

// PayeeAccountNotIn applies the NotIn predicate on the "payee_account" field.
func PayeeAccountNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayeeAccount, vs...))
}

// PayeeAccountGT applies the GT predicate on the "payee_account" field.
func PayeeAccountGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayeeAccount, v))
}

// PayeeAccountGTE applies the GTE predicate on the "payee_account" field.
func PayeeAccountGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayeeAccount, v))
}

// PayeeAccountLT applies the LT predicate on the "payee_account" field.
func PayeeAccountLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayeeAccount, v))
}

// PayeeAccountLTE applies the LTE predicate on the "payee_account" field.
func PayeeAccountLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayeeAccount, v))
}

// PayeeAccountContains applies the Contains predicate on the "payee_account" field.
func PayeeAccountContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldPayeeAccount, v))
}

// PayeeAccountHasPrefix applies the HasPrefix predicate on the "payee_account" field.
func PayeeAccountHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldPayeeAccount, v))
}

// PayeeAccountHasSuffix applies the HasSuffix predicate on the "payee_account" field.
func PayeeAccountHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldPayeeAccount, v))
}

// PayeeAccountEqualFold applies the EqualFold predicate on the "payee_account" field.
func PayeeAccountEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldPayeeAccount, v))
}

// PayeeAccountContainsFold applies the ContainsFold predicate on the "payee_account" field.
func PayeeAccountContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldPayeeAccount, v))
}

// PayRatioEQ applies the EQ predicate on the "pay_ratio" field.
func PayRatioEQ(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayRatio, v))
}

// PayRatioNEQ applies the NEQ predicate on the "pay_ratio" field.
func PayRatioNEQ(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayRatio, v))
}

// PayRatioIn applies the In predicate on the "pay_ratio" field.
func PayRatioIn(vs ...float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayRatio, vs...))
}

// PayRatioNotIn applies the NotIn predicate on the "pay_ratio" field.
func PayRatioNotIn(vs ...float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayRatio, vs...))
}

// PayRatioGT applies the GT predicate on the "pay_ratio" field.
func PayRatioGT(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayRatio, v))
}

// PayRatioGTE applies the GTE predicate on the "pay_ratio" field.
func PayRatioGTE(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayRatio, v))
}

// PayRatioLT applies the LT predicate on the "pay_ratio" field.
func PayRatioLT(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayRatio, v))
}

// PayRatioLTE applies the LTE predicate on the "pay_ratio" field.
func PayRatioLTE(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayRatio, v))
}

// PayAmountEQ applies the EQ predicate on the "pay_amount" field.
func PayAmountEQ(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayAmount, v))
}

// PayAmountNEQ applies the NEQ predicate on the "pay_amount" field.
func PayAmountNEQ(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayAmount, v))
}

// PayAmountIn applies the In predicate on the "pay_amount" field.
func PayAmountIn(vs ...float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayAmount, vs...))
}

// PayAmountNotIn applies the NotIn predicate on the "pay_amount" field.
func PayAmountNotIn(vs ...float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayAmount, vs...))
}

// PayAmountGT applies the GT predicate on the "pay_amount" field.
func PayAmountGT(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayAmount, v))
}

// PayAmountGTE applies the GTE predicate on the "pay_amount" field.
func PayAmountGTE(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayAmount, v))
}

// PayAmountLT applies the LT predicate on the "pay_amount" field.
func PayAmountLT(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayAmount, v))
}

// PayAmountLTE applies the LTE predicate on the "pay_amount" field.
func PayAmountLTE(v float64) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayAmount, v))
}

// PayRemarkEQ applies the EQ predicate on the "pay_remark" field.
func PayRemarkEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayRemark, v))
}

// PayRemarkNEQ applies the NEQ predicate on the "pay_remark" field.
func PayRemarkNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayRemark, v))
}

// PayRemarkIn applies the In predicate on the "pay_remark" field.
func PayRemarkIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayRemark, vs...))
}

// PayRemarkNotIn applies the NotIn predicate on the "pay_remark" field.
func PayRemarkNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayRemark, vs...))
}

// PayRemarkGT applies the GT predicate on the "pay_remark" field.
func PayRemarkGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayRemark, v))
}

// PayRemarkGTE applies the GTE predicate on the "pay_remark" field.
func PayRemarkGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayRemark, v))
}

// PayRemarkLT applies the LT predicate on the "pay_remark" field.
func PayRemarkLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayRemark, v))
}

// PayRemarkLTE applies the LTE predicate on the "pay_remark" field.
func PayRemarkLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayRemark, v))
}

// PayRemarkContains applies the Contains predicate on the "pay_remark" field.
func PayRemarkContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldPayRemark, v))
}

// PayRemarkHasPrefix applies the HasPrefix predicate on the "pay_remark" field.
func PayRemarkHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldPayRemark, v))
}

// PayRemarkHasSuffix applies the HasSuffix predicate on the "pay_remark" field.
func PayRemarkHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldPayRemark, v))
}

// PayRemarkIsNil applies the IsNil predicate on the "pay_remark" field.
func PayRemarkIsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldPayRemark))
}

// PayRemarkNotNil applies the NotNil predicate on the "pay_remark" field.
func PayRemarkNotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldPayRemark))
}

// PayRemarkEqualFold applies the EqualFold predicate on the "pay_remark" field.
func PayRemarkEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldPayRemark, v))
}

// PayRemarkContainsFold applies the ContainsFold predicate on the "pay_remark" field.
func PayRemarkContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldPayRemark, v))
}

// PayMethodEQ applies the EQ predicate on the "pay_method" field.
func PayMethodEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPayMethod, v))
}

// PayMethodNEQ applies the NEQ predicate on the "pay_method" field.
func PayMethodNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPayMethod, v))
}

// PayMethodIn applies the In predicate on the "pay_method" field.
func PayMethodIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPayMethod, vs...))
}

// PayMethodNotIn applies the NotIn predicate on the "pay_method" field.
func PayMethodNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPayMethod, vs...))
}

// PayMethodGT applies the GT predicate on the "pay_method" field.
func PayMethodGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPayMethod, v))
}

// PayMethodGTE applies the GTE predicate on the "pay_method" field.
func PayMethodGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPayMethod, v))
}

// PayMethodLT applies the LT predicate on the "pay_method" field.
func PayMethodLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPayMethod, v))
}

// PayMethodLTE applies the LTE predicate on the "pay_method" field.
func PayMethodLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPayMethod, v))
}

// PayMethodContains applies the Contains predicate on the "pay_method" field.
func PayMethodContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldPayMethod, v))
}

// PayMethodHasPrefix applies the HasPrefix predicate on the "pay_method" field.
func PayMethodHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldPayMethod, v))
}

// PayMethodHasSuffix applies the HasSuffix predicate on the "pay_method" field.
func PayMethodHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldPayMethod, v))
}

// PayMethodIsNil applies the IsNil predicate on the "pay_method" field.
func PayMethodIsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldPayMethod))
}

// PayMethodNotNil applies the NotNil predicate on the "pay_method" field.
func PayMethodNotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldPayMethod))
}

// PayMethodEqualFold applies the EqualFold predicate on the "pay_method" field.
func PayMethodEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldPayMethod, v))
}

// PayMethodContainsFold applies the ContainsFold predicate on the "pay_method" field.
func PayMethodContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldPayMethod, v))
}

// PlanPayTimeEQ applies the EQ predicate on the "plan_pay_time" field.
func PlanPayTimeEQ(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldPlanPayTime, v))
}

// PlanPayTimeNEQ applies the NEQ predicate on the "plan_pay_time" field.
func PlanPayTimeNEQ(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldPlanPayTime, v))
}

// PlanPayTimeIn applies the In predicate on the "plan_pay_time" field.
func PlanPayTimeIn(vs ...time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldPlanPayTime, vs...))
}

// PlanPayTimeNotIn applies the NotIn predicate on the "plan_pay_time" field.
func PlanPayTimeNotIn(vs ...time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldPlanPayTime, vs...))
}

// PlanPayTimeGT applies the GT predicate on the "plan_pay_time" field.
func PlanPayTimeGT(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldPlanPayTime, v))
}

// PlanPayTimeGTE applies the GTE predicate on the "plan_pay_time" field.
func PlanPayTimeGTE(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldPlanPayTime, v))
}

// PlanPayTimeLT applies the LT predicate on the "plan_pay_time" field.
func PlanPayTimeLT(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldPlanPayTime, v))
}

// PlanPayTimeLTE applies the LTE predicate on the "plan_pay_time" field.
func PlanPayTimeLTE(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldPlanPayTime, v))
}

// ApprovalStatusEQ applies the EQ predicate on the "approval_status" field.
func ApprovalStatusEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldApprovalStatus, v))
}

// ApprovalStatusNEQ applies the NEQ predicate on the "approval_status" field.
func ApprovalStatusNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldApprovalStatus, v))
}

// ApprovalStatusIn applies the In predicate on the "approval_status" field.
func ApprovalStatusIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldApprovalStatus, vs...))
}

// ApprovalStatusNotIn applies the NotIn predicate on the "approval_status" field.
func ApprovalStatusNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldApprovalStatus, vs...))
}

// ApprovalStatusGT applies the GT predicate on the "approval_status" field.
func ApprovalStatusGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldApprovalStatus, v))
}

// ApprovalStatusGTE applies the GTE predicate on the "approval_status" field.
func ApprovalStatusGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldApprovalStatus, v))
}

// ApprovalStatusLT applies the LT predicate on the "approval_status" field.
func ApprovalStatusLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldApprovalStatus, v))
}

// ApprovalStatusLTE applies the LTE predicate on the "approval_status" field.
func ApprovalStatusLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldApprovalStatus, v))
}

// ApprovalStatusContains applies the Contains predicate on the "approval_status" field.
func ApprovalStatusContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldApprovalStatus, v))
}

// ApprovalStatusHasPrefix applies the HasPrefix predicate on the "approval_status" field.
func ApprovalStatusHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldApprovalStatus, v))
}

// ApprovalStatusHasSuffix applies the HasSuffix predicate on the "approval_status" field.
func ApprovalStatusHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldApprovalStatus, v))
}

// ApprovalStatusEqualFold applies the EqualFold predicate on the "approval_status" field.
func ApprovalStatusEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldApprovalStatus, v))
}

// ApprovalStatusContainsFold applies the ContainsFold predicate on the "approval_status" field.
func ApprovalStatusContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldApprovalStatus, v))
}

// DoneEQ applies the EQ predicate on the "done" field.
func DoneEQ(v bool) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldDone, v))
}

// DoneNEQ applies the NEQ predicate on the "done" field.
func DoneNEQ(v bool) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldDone, v))
}

// CreateAtEQ applies the EQ predicate on the "create_at" field.
func CreateAtEQ(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldCreateAt, v))
}

// CreateAtNEQ applies the NEQ predicate on the "create_at" field.
func CreateAtNEQ(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldCreateAt, v))
}

// CreateAtIn applies the In predicate on the "create_at" field.
func CreateAtIn(vs ...time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldCreateAt, vs...))
}

// CreateAtNotIn applies the NotIn predicate on the "create_at" field.
func CreateAtNotIn(vs ...time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldCreateAt, vs...))
}

// CreateAtGT applies the GT predicate on the "create_at" field.
func CreateAtGT(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldCreateAt, v))
}

// CreateAtGTE applies the GTE predicate on the "create_at" field.
func CreateAtGTE(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldCreateAt, v))
}

// CreateAtLT applies the LT predicate on the "create_at" field.
func CreateAtLT(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldCreateAt, v))
}

// CreateAtLTE applies the LTE predicate on the "create_at" field.
func CreateAtLTE(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldCreateAt, v))
}

// CreateByEQ applies the EQ predicate on the "create_by" field.
func CreateByEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldCreateBy, v))
}

// CreateByNEQ applies the NEQ predicate on the "create_by" field.
func CreateByNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldCreateBy, v))
}

// CreateByIn applies the In predicate on the "create_by" field.
func CreateByIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldCreateBy, vs...))
}

// CreateByNotIn applies the NotIn predicate on the "create_by" field.
func CreateByNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldCreateBy, vs...))
}

// CreateByGT applies the GT predicate on the "create_by" field.
func CreateByGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldCreateBy, v))
}

// CreateByGTE applies the GTE predicate on the "create_by" field.
func CreateByGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldCreateBy, v))
}

// CreateByLT applies the LT predicate on the "create_by" field.
func CreateByLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldCreateBy, v))
}

// CreateByLTE applies the LTE predicate on the "create_by" field.
func CreateByLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldCreateBy, v))
}

// CreateByContains applies the Contains predicate on the "create_by" field.
func CreateByContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldCreateBy, v))
}

// CreateByHasPrefix applies the HasPrefix predicate on the "create_by" field.
func CreateByHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldCreateBy, v))
}

// CreateByHasSuffix applies the HasSuffix predicate on the "create_by" field.
func CreateByHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldCreateBy, v))
}

// CreateByIsNil applies the IsNil predicate on the "create_by" field.
func CreateByIsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldCreateBy))
}

// CreateByNotNil applies the NotNil predicate on the "create_by" field.
func CreateByNotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldCreateBy))
}

// CreateByEqualFold applies the EqualFold predicate on the "create_by" field.
func CreateByEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldCreateBy, v))
}

// CreateByContainsFold applies the ContainsFold predicate on the "create_by" field.
func CreateByContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldCreateBy, v))
}

// UpdateAtEQ applies the EQ predicate on the "update_at" field.
func UpdateAtEQ(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldUpdateAt, v))
}

// UpdateAtNEQ applies the NEQ predicate on the "update_at" field.
func UpdateAtNEQ(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldUpdateAt, v))
}

// UpdateAtIn applies the In predicate on the "update_at" field.
func UpdateAtIn(vs ...time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldUpdateAt, vs...))
}

// UpdateAtNotIn applies the NotIn predicate on the "update_at" field.
func UpdateAtNotIn(vs ...time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldUpdateAt, vs...))
}

// UpdateAtGT applies the GT predicate on the "update_at" field.
func UpdateAtGT(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldUpdateAt, v))
}

// UpdateAtGTE applies the GTE predicate on the "update_at" field.
func UpdateAtGTE(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldUpdateAt, v))
}

// UpdateAtLT applies the LT predicate on the "update_at" field.
func UpdateAtLT(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldUpdateAt, v))
}

// UpdateAtLTE applies the LTE predicate on the "update_at" field.
func UpdateAtLTE(v time.Time) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldUpdateAt, v))
}

// UpdateByEQ applies the EQ predicate on the "update_by" field.
func UpdateByEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEQ(FieldUpdateBy, v))
}

// UpdateByNEQ applies the NEQ predicate on the "update_by" field.
func UpdateByNEQ(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNEQ(FieldUpdateBy, v))
}

// UpdateByIn applies the In predicate on the "update_by" field.
func UpdateByIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIn(FieldUpdateBy, vs...))
}

// UpdateByNotIn applies the NotIn predicate on the "update_by" field.
func UpdateByNotIn(vs ...string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotIn(FieldUpdateBy, vs...))
}

// UpdateByGT applies the GT predicate on the "update_by" field.
func UpdateByGT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGT(FieldUpdateBy, v))
}

// UpdateByGTE applies the GTE predicate on the "update_by" field.
func UpdateByGTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldGTE(FieldUpdateBy, v))
}

// UpdateByLT applies the LT predicate on the "update_by" field.
func UpdateByLT(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLT(FieldUpdateBy, v))
}

// UpdateByLTE applies the LTE predicate on the "update_by" field.
func UpdateByLTE(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldLTE(FieldUpdateBy, v))
}

// UpdateByContains applies the Contains predicate on the "update_by" field.
func UpdateByContains(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContains(FieldUpdateBy, v))
}

// UpdateByHasPrefix applies the HasPrefix predicate on the "update_by" field.
func UpdateByHasPrefix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasPrefix(FieldUpdateBy, v))
}

// UpdateByHasSuffix applies the HasSuffix predicate on the "update_by" field.
func UpdateByHasSuffix(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldHasSuffix(FieldUpdateBy, v))
}

// UpdateByIsNil applies the IsNil predicate on the "update_by" field.
func UpdateByIsNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldIsNull(FieldUpdateBy))
}

// UpdateByNotNil applies the NotNil predicate on the "update_by" field.
func UpdateByNotNil() predicate.BidExpense {
	return predicate.BidExpense(sql.FieldNotNull(FieldUpdateBy))
}

// UpdateByEqualFold applies the EqualFold predicate on the "update_by" field.
func UpdateByEqualFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldEqualFold(FieldUpdateBy, v))
}

// UpdateByContainsFold applies the ContainsFold predicate on the "update_by" field.
func UpdateByContainsFold(v string) predicate.BidExpense {
	return predicate.BidExpense(sql.FieldContainsFold(FieldUpdateBy, v))
}

// HasProject applies the HasEdge predicate on the "project" edge.
func HasProject() predicate.BidExpense {
	return predicate.BidExpense(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ProjectTable, ProjectColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProjectWith applies the HasEdge predicate on the "project" edge with a given conditions (other predicates).
func HasProjectWith(preds ...predicate.BidProject) predicate.BidExpense {
	return predicate.BidExpense(func(s *sql.Selector) {
		step := newProjectStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BidExpense) predicate.BidExpense {
	return predicate.BidExpense(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BidExpense) predicate.BidExpense {
	return predicate.BidExpense(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BidExpense) predicate.BidExpense {
	return predicate.BidExpense(sql.NotPredicates(p))
}
